- name: DEVELOPING SHIPPING APPLICATION
  hosts: shipping
  become: yes

  tasks:
  - name: INSTALLING MAVEN SOFTWARE
    ansible.builtin.yum:
     name: maven 
     state: latest

  - name: CHECKING USER IS EXITS OR NOT
    ansible.builtin.command: id roboshop
    register: user
    ignore_errors: true

  - when: user.rc !=0
    name: CREATING USER
    become: yes
    ansible.builtin.user:
     name: roboshop

  - name: CHECKING DIRECTORY EXIST OR NOT
    ansible.builtin.stat:
     path: /app
    register: directory

  - when: directory.stat.exists == False
    name: PRINTING DIRECTORY EXISTS OR NOT
    ansible.builtin.file:
     path: /app
     state: directory

  - name: DOWNLOADING THE APPLICATION
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
     dest: /tmp/shipping.zip

  - name: UNZIPPING THE APPLICATION
    ansible.builtin.unarchive:
     src: /tmp/shipping.zip
     dest: /app
     remote_src: yes

  - name: INSTALLING THE DEPENDENCIES
    ansible.builtin.command: mvn clean package
    args: 
     chdir: /app

  - name: RENAMING THE FOLDER
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: COPYING SHIPPING SERVICE
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service


  - name: DEAMON RELOAD
    ansible.builtin.systemd:
     deamon_reload: true

  - name: ENABLING AND STARTING THE SERVICE
    ansible.builtin.service:
     name: shipping 
     state: started
     enabled: true

  - name: INSTALLING MYSQL CLIENT
    ansible.builtin.yum: 
     name: mysql 
     state: present

  - name: LOADING THE SCHEMA
    ansible.builtin.command: mysql -h 172.31.27.9 -uroot -pRoboShop@1 < /app/schema/shipping.sql 

  - name: RESTARTING THE SHIPPING
    ansible.builtin.service:
     name: shipping 
     state: restarted
  
    
    

    